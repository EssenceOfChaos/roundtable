{
	"info": {
		"_postman_id": "e008a311-c028-4c55-95df-3fe43c58a405",
		"name": "Roundtable",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "385997"
	},
	"item": [
		{
			"name": "List All Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response body is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Validate that the 'id' field is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(item) {",
							"        pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"The 'body' field should be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function (post) {",
							"        pm.expect(post.body).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "localhost:8080/posts"
			},
			"response": []
		},
		{
			"name": "Create a Post",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": 4,\n  \"title\": \"New Technology Post\",\n  \"description\": \"A post about new technologies\",\n  \"body\": \"There have been major advancements in AI, robotics, and supply chain management.\",\n  \"tags\": [\n    \"technology\",\n    \"interesting\",\n    \"educational\"\n  ],\n  \"upvoted\": 142,\n  \"downvoted\": 3,\n  \"imagePreview\": \"link-to-preview-image\",\n  \"image\": \"link-to-image\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/post"
			},
			"response": []
		},
		{
			"name": "Get a Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"The id should be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"downvoted should be a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.downvoted).to.be.a('number');",
							"    pm.expect(responseData.downvoted).to.be.at.least(0);",
							"});",
							"",
							"pm.test(\"upvoted should be a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.upvoted).to.be.a('number');",
							"    pm.expect(responseData.upvoted).to.be.at.least(0);",
							"});",
							"",
							"pm.test(\"Tags is an array and is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.tags).to.be.an('array');",
							"    pm.expect(responseData.tags).to.have.lengthOf.at.least(1, \"Tags array should not be empty\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/post/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"post",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "64bb242e0673dc33e5c1511f"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Post",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Super Better Nice Title\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/post/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"post",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "64bad6690673dc02bbc59583"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/post/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"post",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "64bad2740673dc02bbffb6e7"
						}
					]
				}
			},
			"response": []
		}
	]
}